---
version: '3.5'

# Based on https://github.com/VictoriaMetrics/VictoriaMetrics/blob/cluster/deployment/docker/docker-compose.yml
# Changed to cluster all elements of the stack for N=3 redundancy

services:

  vmstorage-boxer:
    image: victoriametrics/vmstorage
    volumes:
      - strgdata:/storage
    command:
      - '--storageDataPath=/storage'
      - '--retentionPeriod=9999y'
    networks:
      - vminternal
    deploy:
      placement:
        constraints:
          - node.Hostname==boxer
    restart: always

  vmstorage-k0node1:
    image: victoriametrics/vmstorage
    volumes:
      - strgdata:/storage
    command:
      - '--storageDataPath=/storage'
      - '--retentionPeriod=9999y'
    networks:
      - vminternal
    deploy:
      placement:
        constraints:
          - node.Hostname==k0node1
    restart: always

  vmstorage-noether:
    image: victoriametrics/vmstorage
    volumes:
      - strgdata:/storage
    command:
      - '--storageDataPath=/storage'
      - '--retentionPeriod=9999y'
    networks:
      - vminternal
    deploy:
      placement:
        constraints:
          - node.Hostname==noether
    restart: always

  vminsert:
    image: victoriametrics/vminsert
    depends_on:
      - vmstorage-boxer
      - vmstorage-k0node1
      - vmstorage-noether
    command:
      - '--replicationFactor=2'
      - '--storageNode=vmstorage-boxer:8400'
      - '--storageNode=vmstorage-k0node1:8400'
      - '--storageNode=vmstorage-noether:8400'
      - '-influxSkipSingleField'
    networks:
      - vminternal
    restart: always

  vmselect:
    image: victoriametrics/vmselect
    depends_on:
      - vmstorage-boxer
      - vmstorage-k0node1
      - vmstorage-noether
    command:
      - '--replicationFactor=2'
      - '--storageNode=vmstorage-boxer:8401'
      - '--storageNode=vmstorage-k0node1:8401'
      - '--storageNode=vmstorage-noether:8401'
      - '-dedup.minScrapeInterval=1ms'
    networks:
      - vminternal
    ports:
      - 8481:8481
    restart: always

  vmagent:
    image: victoriametrics/vmagent
    depends_on:
      - vminsert
      - vmselect
    networks:
      - vminternal
      - bridge
    volumes:
      - vmagentdata:/vmagentdata
    configs:
      - source: vmagent_prometheus
        target: /etc/prometheus/prometheus.yml
      - source: victoriametrics_scrape_config
        target: /etc/prometheus.d/victoriametrics.yml
      - source: infra_scrape_config
        target: /etc/prometheus.d/infra.yml
      - source: swarm_nodes_scrape_config
        target: /etc/prometheus.d/swarm.yml
    command:
      - '--promscrape.config=/etc/prometheus/prometheus.yml'
      - '--remoteWrite.url=http://vminsert:8480/insert/0/prometheus/'
    restart: always

#  vmalert:
#    image: victoriametrics/vmalert
#    depends_on:
#      - vmselect
#      - vminsert
#    networks:
#      - vminternal
#    configs:
#      - source: vmalert_alerts
#        target: /etc/alerts/alerts.yml
#    command:
#      - '--datasource.url=http://vmselect:8481/select/0/prometheus'
#      - '--remoteRead.url=http://vmselect:8481/select/0/prometheus'
#      - '--remoteWrite.url=http://vminsert:8480/insert/0/prometheus'
#      - '--notifier.url=http://alertmanager:9093/'
#      - '--rule=/etc/alerts/*.yml'
#      # display source of alerts in grafana
#      - '-external.url=http://victoriametrics.shill.gq:3000' #grafana outside container
#      # when copypaste the line below be aware of '$$' for escaping in '$expr'
#      - '--external.alert.source=explore?orgId=1&left=["now-1h","now","VictoriaMetrics",{"expr":"{{$$expr|quotesEscape|crlfEscape|queryEscape}}"},{"mode":"Metrics"},{"ui":[true,true,true,"none"]}]'
#    restart: always

#  alertmanager:
#    image:  prom/alertmanager
#    configs:
#      - source: alertmanager
#        target: /config/alertmanager.yml
#    command:
#      - '--config.file=/config/alertmanager.yml'
#    ports:
#      - 9093:9093
#    restart: always

  grafana:
    image: grafana/grafana
    depends_on:
      - vmselect
    networks:
      - vminternal
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
    configs:
      - source: grafana_datasources
        target: /etc/grafana/provisioning/datasources/datasource.yml
#      - source: grafana_vm_dashboard
#        target: /var/lib/grafana/dashboards/vm.json
#      - source: grafana_vmagent_dashboard
#        target: /var/lib/grafana/dashboards/vmagent.json
#      - source: grafana_vmalert_dashboard
#        target: /var/lib/grafana/dashboards/vmalert.json
    deploy:
      placement:
        constraints:
          - node.Hostname==boxer
    restart: always

configs:
  vmagent_prometheus:
    name: vmagent_prometheus-${EPOCH}
    file: vmagent-prometheus.yml
  victoriametrics_scrape_config:
    name: victoriametrics_scrape_config-${EPOCH}
    file: victoriametrics_scrape_config.yml
  infra_scrape_config:
    name: infra_scrape_config-${EPOCH}
    file: infra_scrape_config.yml
  swarm_nodes_scrape_config:
    name: swarm_nodes_scrape_config-${EPOCH}
    file: swarm_nodes_scrape_config.yml
  grafana_datasources:
    name: grafana_datasources-${EPOCH}
    file: grafana/datasource.yml
  grafana_vm_dashboard:
    name: grafana_vm_dashboard-${EPOCH}
    file: dashboards/victoriametrics.json
  grafana_vmagent_dashboard:
    name: grafana_vmagent_dashboard-${EPOCH}
    file: dashboards/vmagent.json
  grafana_vmalert_dashboard:
    name: grafana_vmalert_dashboard-${EPOCH}
    file: dashboards/vmalert.json
#  vmalert_alerts:
#    name: vmalert_alerts-${EPOCH}
#    file: alerts.yml
#  alertmanager:
#    name: alertmanager-${EPOCH}
#    file: alertmanager.yml

volumes:
  strgdata:
  grafanadata:
  vmagentdata:

networks:
  vminternal:
    internal: true
  bridge:
    external: true

